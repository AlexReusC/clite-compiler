
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND ELSE EQ FLOAT GTE ID IF INT INTLIT LTE MAIN NEQ OR RETURN WHILE\n    Program : INT MAIN '(' ')' '{' Declarations Statements '}'\n    \n    empty :\n    \n    Declarations : Declaration Declarations\n                 | empty\n    \n    Declaration : INT ID ';'\n    \n    Statements : Statement Statements\n               | empty\n    \n    Statement : Assignment\n              | IfStatement\n              | WhileStatement\n              | ';'\n    \n    IfStatement : IF '(' Expression ')' Statement ELSE Statement\n    \n    WhileStatement : WHILE '(' Expression ')' Statement\n    \n    Assignment : ID '=' Expression ';'\n    \n    Expression : Conjunction\n               | Expression OR Conjunction\n    \n    Conjunction : Equality\n                | Conjunction AND Equality\n    \n    Equality : Relation\n             | Relation EquOp Relation\n    \n    EquOp : EQ\n          | NEQ\n    \n    Relation : Addition\n             | Addition RelOp Addition \n    \n    RelOp : '<'\n          | LTE\n          | '>'\n          | GTE\n    \n    Addition : Term\n             | Addition AddOp Term\n    \n    AddOp : '+'\n          | '-'\n    \n    Term : Factor\n         | Term MulOp Primary\n    \n    MulOp : '*'\n          | '/'\n          | '%'\n    \n    Factor : Primary\n           | UnaryOp Primary\n    \n    UnaryOp : '-'\n            | '!'\n    Primary : INTLITPrimary : ID"
    
_lr_action_items = {'INT':([0,6,9,23,],[2,7,7,-5,]),'$end':([1,24,],[0,-1,]),'MAIN':([2,],[3,]),'(':([3,20,21,],[4,27,28,]),')':([4,29,31,32,33,34,35,36,37,39,42,43,62,65,66,67,68,69,70,],[5,-43,-15,-17,-19,-23,-29,-33,-38,-42,63,64,-39,-16,-18,-20,-24,-30,-34,]),'{':([5,],[6,]),';':([6,8,9,10,11,13,15,16,17,18,22,23,29,30,31,32,33,34,35,36,37,39,44,62,63,64,65,66,67,68,69,70,72,73,74,],[-2,18,-2,-4,23,18,-8,-9,-10,-11,-3,-5,-43,44,-15,-17,-19,-23,-29,-33,-38,-42,-14,-39,18,18,-16,-18,-20,-24,-30,-34,-13,18,-12,]),'ID':([6,7,8,9,10,13,15,16,17,18,22,23,26,27,28,38,40,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,72,73,74,],[-2,11,19,-2,-4,19,-8,-9,-10,-11,-3,-5,29,29,29,29,-40,-41,-14,29,29,29,-21,-22,29,29,-25,-26,-27,-28,-31,-32,29,-35,-36,-37,19,19,-13,19,-12,]),'IF':([6,8,9,10,13,15,16,17,18,22,23,44,63,64,72,73,74,],[-2,20,-2,-4,20,-8,-9,-10,-11,-3,-5,-14,20,20,-13,20,-12,]),'WHILE':([6,8,9,10,13,15,16,17,18,22,23,44,63,64,72,73,74,],[-2,21,-2,-4,21,-8,-9,-10,-11,-3,-5,-14,21,21,-13,21,-12,]),'}':([6,8,9,10,12,13,14,15,16,17,18,22,23,25,44,72,74,],[-2,-2,-2,-4,24,-2,-7,-8,-9,-10,-11,-3,-5,-6,-14,-13,-12,]),'ELSE':([15,16,17,18,44,71,72,74,],[-8,-9,-10,-11,-14,73,-13,-12,]),'=':([19,],[26,]),'INTLIT':([26,27,28,38,40,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,],[39,39,39,39,-40,-41,39,39,39,-21,-22,39,39,-25,-26,-27,-28,-31,-32,39,-35,-36,-37,]),'-':([26,27,28,29,34,35,36,37,39,45,46,47,48,49,50,51,52,53,54,55,56,57,62,68,69,70,],[40,40,40,-43,57,-29,-33,-38,-42,40,40,40,-21,-22,40,40,-25,-26,-27,-28,-31,-32,-39,57,-30,-34,]),'!':([26,27,28,45,46,47,48,49,50,51,52,53,54,55,56,57,],[41,41,41,41,41,41,-21,-22,41,41,-25,-26,-27,-28,-31,-32,]),'*':([29,35,36,37,39,62,69,70,],[-43,59,-33,-38,-42,-39,59,-34,]),'/':([29,35,36,37,39,62,69,70,],[-43,60,-33,-38,-42,-39,60,-34,]),'%':([29,35,36,37,39,62,69,70,],[-43,61,-33,-38,-42,-39,61,-34,]),'<':([29,34,35,36,37,39,62,69,70,],[-43,52,-29,-33,-38,-42,-39,-30,-34,]),'LTE':([29,34,35,36,37,39,62,69,70,],[-43,53,-29,-33,-38,-42,-39,-30,-34,]),'>':([29,34,35,36,37,39,62,69,70,],[-43,54,-29,-33,-38,-42,-39,-30,-34,]),'GTE':([29,34,35,36,37,39,62,69,70,],[-43,55,-29,-33,-38,-42,-39,-30,-34,]),'+':([29,34,35,36,37,39,62,68,69,70,],[-43,56,-29,-33,-38,-42,-39,56,-30,-34,]),'EQ':([29,33,34,35,36,37,39,62,68,69,70,],[-43,48,-23,-29,-33,-38,-42,-39,-24,-30,-34,]),'NEQ':([29,33,34,35,36,37,39,62,68,69,70,],[-43,49,-23,-29,-33,-38,-42,-39,-24,-30,-34,]),'AND':([29,31,32,33,34,35,36,37,39,62,65,66,67,68,69,70,],[-43,46,-17,-19,-23,-29,-33,-38,-42,-39,46,-18,-20,-24,-30,-34,]),'OR':([29,30,31,32,33,34,35,36,37,39,42,43,62,65,66,67,68,69,70,],[-43,45,-15,-17,-19,-23,-29,-33,-38,-42,45,45,-39,-16,-18,-20,-24,-30,-34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Program':([0,],[1,]),'Declarations':([6,9,],[8,22,]),'Declaration':([6,9,],[9,9,]),'empty':([6,8,9,13,],[10,14,10,14,]),'Statements':([8,13,],[12,25,]),'Statement':([8,13,63,64,73,],[13,13,71,72,74,]),'Assignment':([8,13,63,64,73,],[15,15,15,15,15,]),'IfStatement':([8,13,63,64,73,],[16,16,16,16,16,]),'WhileStatement':([8,13,63,64,73,],[17,17,17,17,17,]),'Expression':([26,27,28,],[30,42,43,]),'Conjunction':([26,27,28,45,],[31,31,31,65,]),'Equality':([26,27,28,45,46,],[32,32,32,32,66,]),'Relation':([26,27,28,45,46,47,],[33,33,33,33,33,67,]),'Addition':([26,27,28,45,46,47,50,],[34,34,34,34,34,34,68,]),'Term':([26,27,28,45,46,47,50,51,],[35,35,35,35,35,35,35,69,]),'Factor':([26,27,28,45,46,47,50,51,],[36,36,36,36,36,36,36,36,]),'Primary':([26,27,28,38,45,46,47,50,51,58,],[37,37,37,62,37,37,37,37,37,70,]),'UnaryOp':([26,27,28,45,46,47,50,51,],[38,38,38,38,38,38,38,38,]),'EquOp':([33,],[47,]),'RelOp':([34,],[50,]),'AddOp':([34,68,],[51,51,]),'MulOp':([35,69,],[58,58,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('Program -> INT MAIN ( ) { Declarations Statements }','Program',8,'p_Program','clase0206.py',51),
  ('empty -> <empty>','empty',0,'p_empty','clase0206.py',57),
  ('Declarations -> Declaration Declarations','Declarations',2,'p_Declarations','clase0206.py',63),
  ('Declarations -> empty','Declarations',1,'p_Declarations','clase0206.py',64),
  ('Declaration -> INT ID ;','Declaration',3,'p_Declaration','clase0206.py',71),
  ('Statements -> Statement Statements','Statements',2,'p_Statements','clase0206.py',78),
  ('Statements -> empty','Statements',1,'p_Statements','clase0206.py',79),
  ('Statement -> Assignment','Statement',1,'p_Statement','clase0206.py',86),
  ('Statement -> IfStatement','Statement',1,'p_Statement','clase0206.py',87),
  ('Statement -> WhileStatement','Statement',1,'p_Statement','clase0206.py',88),
  ('Statement -> ;','Statement',1,'p_Statement','clase0206.py',89),
  ('IfStatement -> IF ( Expression ) Statement ELSE Statement','IfStatement',7,'p_IfStatement','clase0206.py',95),
  ('WhileStatement -> WHILE ( Expression ) Statement','WhileStatement',5,'p_WhileStatement','clase0206.py',102),
  ('Assignment -> ID = Expression ;','Assignment',4,'p_Assignment','clase0206.py',108),
  ('Expression -> Conjunction','Expression',1,'p_Expression','clase0206.py',114),
  ('Expression -> Expression OR Conjunction','Expression',3,'p_Expression','clase0206.py',115),
  ('Conjunction -> Equality','Conjunction',1,'p_Conjunction','clase0206.py',124),
  ('Conjunction -> Conjunction AND Equality','Conjunction',3,'p_Conjunction','clase0206.py',125),
  ('Equality -> Relation','Equality',1,'p_Equality','clase0206.py',134),
  ('Equality -> Relation EquOp Relation','Equality',3,'p_Equality','clase0206.py',135),
  ('EquOp -> EQ','EquOp',1,'p_EquOp','clase0206.py',144),
  ('EquOp -> NEQ','EquOp',1,'p_EquOp','clase0206.py',145),
  ('Relation -> Addition','Relation',1,'p_Relation','clase0206.py',151),
  ('Relation -> Addition RelOp Addition','Relation',3,'p_Relation','clase0206.py',152),
  ('RelOp -> <','RelOp',1,'p_RelOp','clase0206.py',161),
  ('RelOp -> LTE','RelOp',1,'p_RelOp','clase0206.py',162),
  ('RelOp -> >','RelOp',1,'p_RelOp','clase0206.py',163),
  ('RelOp -> GTE','RelOp',1,'p_RelOp','clase0206.py',164),
  ('Addition -> Term','Addition',1,'p_Addition','clase0206.py',170),
  ('Addition -> Addition AddOp Term','Addition',3,'p_Addition','clase0206.py',171),
  ('AddOp -> +','AddOp',1,'p_AddOp','clase0206.py',180),
  ('AddOp -> -','AddOp',1,'p_AddOp','clase0206.py',181),
  ('Term -> Factor','Term',1,'p_Term','clase0206.py',187),
  ('Term -> Term MulOp Primary','Term',3,'p_Term','clase0206.py',188),
  ('MulOp -> *','MulOp',1,'p_MulOp','clase0206.py',197),
  ('MulOp -> /','MulOp',1,'p_MulOp','clase0206.py',198),
  ('MulOp -> %','MulOp',1,'p_MulOp','clase0206.py',199),
  ('Factor -> Primary','Factor',1,'p_Factor','clase0206.py',205),
  ('Factor -> UnaryOp Primary','Factor',2,'p_Factor','clase0206.py',206),
  ('UnaryOp -> -','UnaryOp',1,'p_UnaryOp','clase0206.py',222),
  ('UnaryOp -> !','UnaryOp',1,'p_UnaryOp','clase0206.py',223),
  ('Primary -> INTLIT','Primary',1,'p_Primary_IntLit','clase0206.py',228),
  ('Primary -> ID','Primary',1,'p_Primary_Id','clase0206.py',232),
]
