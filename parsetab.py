
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND BOOL CHAR ELSE EQ FLOAT FOR GTE ID IF INT INTLIT LTE NEQ OR RETURN VOID WHILE\n    Program : Function Program\n            | empty\n    \n    Function : FunctionReturnType ID '(' ')' '{' Declarations Statements ReturnStatement '}'\n    \n    ReturnStatement : RETURN Expression ';'\n                    | RETURN ';'\n    \n    empty :\n    \n    Declarations : Declaration Declarations\n                 | empty\n    \n    Declaration : Type ID ';'\n    \n    Type : INT\n         | BOOL\n         | FLOAT\n         | CHAR\n    \n    FunctionReturnType : Type\n                       | VOID\n    \n    Statements : Statement Statements\n               | empty\n    \n    Statement : Assignment\n              | IfStatement\n              | WhileStatement\n              | ForStatement\n              | ';'\n              | Block\n    \n    Block : '{' Statements '}'\n    \n    IfStatement : IF '(' Expression ')' Statement ELSE Statement\n    \n    WhileStatement : WHILE '(' Expression ')' Statement\n    \n    ForStatement : FOR '(' Assignment Expression ';' Assignment ')' Statement\n    \n    Assignment : ID '=' Expression ';'\n    \n    Expression : Conjunction\n               | Expression OR Conjunction\n    \n    Conjunction : Equality\n                | Conjunction AND Equality\n    \n    Equality : Relation\n             | Relation EquOp Relation\n    \n    EquOp : EQ\n          | NEQ\n    \n    Relation : Addition\n             | Addition RelOp Addition \n    \n    RelOp : '<'\n          | LTE\n          | '>'\n          | GTE\n    \n    Addition : Term\n             | Addition AddOp Term\n    \n    AddOp : '+'\n          | '-'\n    \n    Term : Factor\n         | Term MulOp Primary\n    \n    MulOp : '*'\n          | '/'\n          | '%'\n    \n    Factor : Primary\n           | UnaryOp Primary\n    \n    UnaryOp : '-'\n            | '!'\n    Primary : INTLITPrimary : ID\n    Primary : ID '(' ')'\n    "
    
_lr_action_items = {'$end':([0,1,2,3,11,59,],[-6,0,-6,-2,-1,-3,]),'VOID':([0,2,59,],[6,6,-3,]),'INT':([0,2,15,17,44,59,],[7,7,7,7,-9,-3,]),'BOOL':([0,2,15,17,44,59,],[8,8,8,8,-9,-3,]),'FLOAT':([0,2,15,17,44,59,],[9,9,9,9,-9,-3,]),'CHAR':([0,2,15,17,44,59,],[10,10,10,10,-9,-3,]),'ID':([4,5,6,7,8,9,10,15,16,17,18,19,21,23,25,26,27,28,29,30,34,36,39,41,42,43,44,54,56,57,58,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,97,98,99,101,102,103,],[12,-14,-15,-10,-11,-12,-13,-6,20,-6,-8,35,20,20,-18,-19,-20,-21,-22,-23,-7,45,45,45,45,20,-9,45,-54,-55,-24,45,-28,45,45,45,-35,-36,45,45,-39,-40,-41,-42,-45,-46,45,-49,-50,-51,20,20,-26,20,20,-25,20,-27,]),'(':([12,31,32,33,45,],[13,41,42,43,65,]),')':([13,45,47,48,49,50,51,52,53,55,62,63,65,66,84,89,90,91,92,93,94,95,100,],[14,-57,-29,-31,-33,-37,-43,-47,-52,-56,86,87,89,-28,-53,-58,-30,-32,-34,-38,-44,-48,102,]),'{':([14,15,16,17,18,21,23,25,26,27,28,29,30,34,44,58,66,86,87,97,99,101,102,103,],[15,-6,21,-6,-8,21,21,-18,-19,-20,-21,-22,-23,-7,-9,-24,-28,21,21,-26,21,-25,21,-27,]),';':([15,16,17,18,21,23,25,26,27,28,29,30,34,35,39,44,45,46,47,48,49,50,51,52,53,55,58,60,66,84,86,87,88,89,90,91,92,93,94,95,97,99,101,102,103,],[-6,29,-6,-8,29,29,-18,-19,-20,-21,-22,-23,-7,44,61,-9,-57,66,-29,-31,-33,-37,-43,-47,-52,-56,-24,85,-28,-53,29,29,98,-58,-30,-32,-34,-38,-44,-48,-26,29,-25,29,-27,]),'IF':([15,16,17,18,21,23,25,26,27,28,29,30,34,44,58,66,86,87,97,99,101,102,103,],[-6,31,-6,-8,31,31,-18,-19,-20,-21,-22,-23,-7,-9,-24,-28,31,31,-26,31,-25,31,-27,]),'WHILE':([15,16,17,18,21,23,25,26,27,28,29,30,34,44,58,66,86,87,97,99,101,102,103,],[-6,32,-6,-8,32,32,-18,-19,-20,-21,-22,-23,-7,-9,-24,-28,32,32,-26,32,-25,32,-27,]),'FOR':([15,16,17,18,21,23,25,26,27,28,29,30,34,44,58,66,86,87,97,99,101,102,103,],[-6,33,-6,-8,33,33,-18,-19,-20,-21,-22,-23,-7,-9,-24,-28,33,33,-26,33,-25,33,-27,]),'RETURN':([15,16,17,18,22,23,24,25,26,27,28,29,30,34,40,44,58,66,97,101,103,],[-6,-6,-6,-8,39,-6,-17,-18,-19,-20,-21,-22,-23,-7,-16,-9,-24,-28,-26,-25,-27,]),'=':([20,],[36,]),'}':([21,23,24,25,26,27,28,29,30,37,38,40,58,61,66,85,97,101,103,],[-6,-6,-17,-18,-19,-20,-21,-22,-23,58,59,-16,-24,-5,-28,-4,-26,-25,-27,]),'ELSE':([25,26,27,28,29,30,58,66,96,97,101,103,],[-18,-19,-20,-21,-22,-23,-24,-28,99,-26,-25,-27,]),'INTLIT':([36,39,41,42,54,56,57,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,],[55,55,55,55,55,-54,-55,55,-28,55,55,55,-35,-36,55,55,-39,-40,-41,-42,-45,-46,55,-49,-50,-51,]),'-':([36,39,41,42,45,50,51,52,53,55,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,84,89,93,94,95,],[56,56,56,56,-57,79,-43,-47,-52,-56,56,-28,56,56,56,-35,-36,56,56,-39,-40,-41,-42,-45,-46,-53,-58,79,-44,-48,]),'!':([36,39,41,42,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,],[57,57,57,57,57,-28,57,57,57,-35,-36,57,57,-39,-40,-41,-42,-45,-46,]),'*':([45,51,52,53,55,84,89,94,95,],[-57,81,-47,-52,-56,-53,-58,81,-48,]),'/':([45,51,52,53,55,84,89,94,95,],[-57,82,-47,-52,-56,-53,-58,82,-48,]),'%':([45,51,52,53,55,84,89,94,95,],[-57,83,-47,-52,-56,-53,-58,83,-48,]),'<':([45,50,51,52,53,55,84,89,94,95,],[-57,74,-43,-47,-52,-56,-53,-58,-44,-48,]),'LTE':([45,50,51,52,53,55,84,89,94,95,],[-57,75,-43,-47,-52,-56,-53,-58,-44,-48,]),'>':([45,50,51,52,53,55,84,89,94,95,],[-57,76,-43,-47,-52,-56,-53,-58,-44,-48,]),'GTE':([45,50,51,52,53,55,84,89,94,95,],[-57,77,-43,-47,-52,-56,-53,-58,-44,-48,]),'+':([45,50,51,52,53,55,84,89,93,94,95,],[-57,78,-43,-47,-52,-56,-53,-58,78,-44,-48,]),'EQ':([45,49,50,51,52,53,55,84,89,93,94,95,],[-57,70,-37,-43,-47,-52,-56,-53,-58,-38,-44,-48,]),'NEQ':([45,49,50,51,52,53,55,84,89,93,94,95,],[-57,71,-37,-43,-47,-52,-56,-53,-58,-38,-44,-48,]),'AND':([45,47,48,49,50,51,52,53,55,84,89,90,91,92,93,94,95,],[-57,68,-31,-33,-37,-43,-47,-52,-56,-53,-58,68,-32,-34,-38,-44,-48,]),'OR':([45,46,47,48,49,50,51,52,53,55,60,62,63,84,88,89,90,91,92,93,94,95,],[-57,67,-29,-31,-33,-37,-43,-47,-52,-56,67,67,67,-53,67,-58,-30,-32,-34,-38,-44,-48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Program':([0,2,],[1,11,]),'Function':([0,2,],[2,2,]),'empty':([0,2,15,16,17,21,23,],[3,3,18,24,18,24,24,]),'FunctionReturnType':([0,2,],[4,4,]),'Type':([0,2,15,17,],[5,5,19,19,]),'Declarations':([15,17,],[16,34,]),'Declaration':([15,17,],[17,17,]),'Statements':([16,21,23,],[22,37,40,]),'Statement':([16,21,23,86,87,99,102,],[23,23,23,96,97,101,103,]),'Assignment':([16,21,23,43,86,87,98,99,102,],[25,25,25,64,25,25,100,25,25,]),'IfStatement':([16,21,23,86,87,99,102,],[26,26,26,26,26,26,26,]),'WhileStatement':([16,21,23,86,87,99,102,],[27,27,27,27,27,27,27,]),'ForStatement':([16,21,23,86,87,99,102,],[28,28,28,28,28,28,28,]),'Block':([16,21,23,86,87,99,102,],[30,30,30,30,30,30,30,]),'ReturnStatement':([22,],[38,]),'Expression':([36,39,41,42,64,],[46,60,62,63,88,]),'Conjunction':([36,39,41,42,64,67,],[47,47,47,47,47,90,]),'Equality':([36,39,41,42,64,67,68,],[48,48,48,48,48,48,91,]),'Relation':([36,39,41,42,64,67,68,69,],[49,49,49,49,49,49,49,92,]),'Addition':([36,39,41,42,64,67,68,69,72,],[50,50,50,50,50,50,50,50,93,]),'Term':([36,39,41,42,64,67,68,69,72,73,],[51,51,51,51,51,51,51,51,51,94,]),'Factor':([36,39,41,42,64,67,68,69,72,73,],[52,52,52,52,52,52,52,52,52,52,]),'Primary':([36,39,41,42,54,64,67,68,69,72,73,80,],[53,53,53,53,84,53,53,53,53,53,53,95,]),'UnaryOp':([36,39,41,42,64,67,68,69,72,73,],[54,54,54,54,54,54,54,54,54,54,]),'EquOp':([49,],[69,]),'RelOp':([50,],[72,]),'AddOp':([50,93,],[73,73,]),'MulOp':([51,94,],[80,80,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('Program -> Function Program','Program',2,'p_Program','clase0206.py',56),
  ('Program -> empty','Program',1,'p_Program','clase0206.py',57),
  ('Function -> FunctionReturnType ID ( ) { Declarations Statements ReturnStatement }','Function',9,'p_Function','clase0206.py',64),
  ('ReturnStatement -> RETURN Expression ;','ReturnStatement',3,'p_ReturnStatement','clase0206.py',70),
  ('ReturnStatement -> RETURN ;','ReturnStatement',2,'p_ReturnStatement','clase0206.py',71),
  ('empty -> <empty>','empty',0,'p_empty','clase0206.py',80),
  ('Declarations -> Declaration Declarations','Declarations',2,'p_Declarations','clase0206.py',86),
  ('Declarations -> empty','Declarations',1,'p_Declarations','clase0206.py',87),
  ('Declaration -> Type ID ;','Declaration',3,'p_Declaration','clase0206.py',94),
  ('Type -> INT','Type',1,'p_Type','clase0206.py',100),
  ('Type -> BOOL','Type',1,'p_Type','clase0206.py',101),
  ('Type -> FLOAT','Type',1,'p_Type','clase0206.py',102),
  ('Type -> CHAR','Type',1,'p_Type','clase0206.py',103),
  ('FunctionReturnType -> Type','FunctionReturnType',1,'p_FunctionReturnType','clase0206.py',109),
  ('FunctionReturnType -> VOID','FunctionReturnType',1,'p_FunctionReturnType','clase0206.py',110),
  ('Statements -> Statement Statements','Statements',2,'p_Statements','clase0206.py',116),
  ('Statements -> empty','Statements',1,'p_Statements','clase0206.py',117),
  ('Statement -> Assignment','Statement',1,'p_Statement','clase0206.py',124),
  ('Statement -> IfStatement','Statement',1,'p_Statement','clase0206.py',125),
  ('Statement -> WhileStatement','Statement',1,'p_Statement','clase0206.py',126),
  ('Statement -> ForStatement','Statement',1,'p_Statement','clase0206.py',127),
  ('Statement -> ;','Statement',1,'p_Statement','clase0206.py',128),
  ('Statement -> Block','Statement',1,'p_Statement','clase0206.py',129),
  ('Block -> { Statements }','Block',3,'p_Block','clase0206.py',135),
  ('IfStatement -> IF ( Expression ) Statement ELSE Statement','IfStatement',7,'p_IfStatement','clase0206.py',141),
  ('WhileStatement -> WHILE ( Expression ) Statement','WhileStatement',5,'p_WhileStatement','clase0206.py',147),
  ('ForStatement -> FOR ( Assignment Expression ; Assignment ) Statement','ForStatement',8,'p_ForStatement','clase0206.py',153),
  ('Assignment -> ID = Expression ;','Assignment',4,'p_Assignment','clase0206.py',159),
  ('Expression -> Conjunction','Expression',1,'p_Expression','clase0206.py',165),
  ('Expression -> Expression OR Conjunction','Expression',3,'p_Expression','clase0206.py',166),
  ('Conjunction -> Equality','Conjunction',1,'p_Conjunction','clase0206.py',175),
  ('Conjunction -> Conjunction AND Equality','Conjunction',3,'p_Conjunction','clase0206.py',176),
  ('Equality -> Relation','Equality',1,'p_Equality','clase0206.py',185),
  ('Equality -> Relation EquOp Relation','Equality',3,'p_Equality','clase0206.py',186),
  ('EquOp -> EQ','EquOp',1,'p_EquOp','clase0206.py',195),
  ('EquOp -> NEQ','EquOp',1,'p_EquOp','clase0206.py',196),
  ('Relation -> Addition','Relation',1,'p_Relation','clase0206.py',202),
  ('Relation -> Addition RelOp Addition','Relation',3,'p_Relation','clase0206.py',203),
  ('RelOp -> <','RelOp',1,'p_RelOp','clase0206.py',212),
  ('RelOp -> LTE','RelOp',1,'p_RelOp','clase0206.py',213),
  ('RelOp -> >','RelOp',1,'p_RelOp','clase0206.py',214),
  ('RelOp -> GTE','RelOp',1,'p_RelOp','clase0206.py',215),
  ('Addition -> Term','Addition',1,'p_Addition','clase0206.py',221),
  ('Addition -> Addition AddOp Term','Addition',3,'p_Addition','clase0206.py',222),
  ('AddOp -> +','AddOp',1,'p_AddOp','clase0206.py',231),
  ('AddOp -> -','AddOp',1,'p_AddOp','clase0206.py',232),
  ('Term -> Factor','Term',1,'p_Term','clase0206.py',238),
  ('Term -> Term MulOp Primary','Term',3,'p_Term','clase0206.py',239),
  ('MulOp -> *','MulOp',1,'p_MulOp','clase0206.py',248),
  ('MulOp -> /','MulOp',1,'p_MulOp','clase0206.py',249),
  ('MulOp -> %','MulOp',1,'p_MulOp','clase0206.py',250),
  ('Factor -> Primary','Factor',1,'p_Factor','clase0206.py',256),
  ('Factor -> UnaryOp Primary','Factor',2,'p_Factor','clase0206.py',257),
  ('UnaryOp -> -','UnaryOp',1,'p_UnaryOp','clase0206.py',273),
  ('UnaryOp -> !','UnaryOp',1,'p_UnaryOp','clase0206.py',274),
  ('Primary -> INTLIT','Primary',1,'p_Primary_IntLit','clase0206.py',279),
  ('Primary -> ID','Primary',1,'p_Primary_Id','clase0206.py',283),
  ('Primary -> ID ( )','Primary',3,'p_Primary_FunctionCall','clase0206.py',288),
]
